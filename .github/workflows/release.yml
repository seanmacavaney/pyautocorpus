name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy-sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: build
      run: |
        python setup.py sdist
    - name: upload
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
    - uses: actions/upload-artifact@v2
      with:
        name: sdist-manylinux
        path: dist/*

  deploy-bdist-manylinux2010:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - uses: pypa/cibuildwheel@v2.13.1
      with:
        output-dir: wheelhouse
      env:
        CIBW_BEFORE_ALL: "yum install -y pcre pcre-devel"
    - name: upload
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload wheelhouse/*
    - uses: actions/upload-artifact@v2
      with:
        name: bdist-manylinux2010
        path: wheelhouse/*

  deploy-bdist-macos:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']
        os: ['macos-latest']
        architecture: ['x64']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: install-deps
      run: |
        brew install pcre
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: build
      run: |
        python setup.py bdist_wheel
    - name: upload
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
    - uses: actions/upload-artifact@v2
      with:
        name: bdist-macos
        path: dist/*

  deploy-bdist-windows:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']
        os: ['windows-latest']
        architecture: ['x64']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: install-deps
      run: |
        # dir C:\hostedtoolcache\windows\Python\3.6.8\x64\libs
        # curl.exe --output pcre-7.0-bin.zip --url https://nav.dl.sourceforge.net/project/gnuwin32/pcre/7.0/pcre-7.0-bin.zip
        # unzip pcre-7.0-bin.zip
        # dir bin
        # svn co svn://vcs.exim.org/pcre/code/trunk pcre
        # # "%VS140COMNTOOLS%../../VC/vcvarsall.bat"
        # # reg.exe query "HKLM\SOFTWARE\Microsoft\MSBuild\ToolsVersions\4.0" /v MSBuildToolsPath
        # # dir "C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V142"
        # cd pcre
        # cmake.exe .
        # # dir "C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V140"
        # # C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe PCRE.sln
        # dir D:/a/pyautocorpus/pyautocorpus/pcre
        # cd ..
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
      # env:
      #   VCTargetsPath: "C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140"
    - name: build
      run: |
        "%VS140COMNTOOLS%../../VC/vcvarsall.bat"
        echo "D:\a\pyautocorpus\pyautocorpus\pcre" >> $PCRE_HOME 
        python setup.py bdist_wheel
    - name: upload
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*
    - uses: actions/upload-artifact@v2
      with:
        name: bdist-windows
        path: dist/*
